{"version":3,"file":"ionic4-star-rating-component.js","sourceRoot":"","sources":["../../src/components/ionic4-star-rating-component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Events } from '@ionic/angular'\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nconst HTML_TEMPLATE = `\r\n<div class=\"ionic4-star-rating\">\r\n  <button [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" type=\"button\" ion-button icon-only (click)=\"changeRating($event)\">\r\n    <ion-icon [ngStyle]=\"{'color':index < this.Math.round(this.parseFloat(rating)) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\r\n  </button>\r\n</div>\r\n`\r\n\r\nconst CSS_STYLE = `\r\n    .ionic4-star-rating button {\r\n        background: none;\r\n        box-shadow: none;\r\n        -webkit-box-shadow: none;\r\n        padding : 0px;\r\n    }\r\n`\r\n\r\n@Component({\r\n  selector: 'ionic4-star-rating',\r\n  template: HTML_TEMPLATE,\r\n  styles: [CSS_STYLE],\r\n  providers: [\r\n    {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: StarRating,\r\n        multi: true\r\n    }\r\n]\r\n})\r\nexport class StarRating implements ControlValueAccessor, OnInit{\r\n\r\n  ngOnInit(): void {\r\n    this.rating = this.rating || 3; //default after input`s initialization\r\n    for(var i=0; i < this.maxRating; i++) {\r\n      this.iconsArray.push(i);\r\n    }\r\n  }\r\n\r\n  public readonly eventInfo = (()=>{\r\n    const id =new Date().getTime();\r\n    const topic = `star-rating:${id}:changed`;\r\n    return { \r\n      topic \r\n    }\r\n  })();\r\n\r\n  private _rating : number;\r\n  private onChange : any;\r\n  private onTouched : any;\r\n  public disabled : boolean;\r\n\r\n  writeValue(obj: number): void {\r\n    this.rating = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.readonly = isDisabled ? \"true\" : \"false\";\r\n  }\r\n\r\n  @Input() public set rating(val : number){\r\n    this._rating = val;\r\n    // for form\r\n    if(this.onChange){\r\n      this.onChange(val);\r\n    }\r\n  }\r\n\r\n  public get rating(): number{\r\n    return this._rating;\r\n  }\r\n  \r\n  @Output()\r\n  ratingChanged : EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  @Input()\r\n  readonly: string = \"false\";\r\n  @Input()\r\n  activeColor : string = '#488aff';\r\n  @Input()\r\n  defaultColor : string = '#aaaaaa';\r\n  @Input()\r\n  activeIcon : string = 'ios-star';\r\n  @Input()\r\n  defaultIcon : string = 'ios-star-outline';\r\n  @Input()\r\n  halfIcon : string = 'ios-star-half';\r\n  @Input()\r\n  halfStar : string = \"false\";\r\n  @Input()\r\n  maxRating : number = 5;\r\n  @Input()\r\n  fontSize : string = '28px';\r\n  Math: any;\r\n  parseFloat : any;\r\n  iconsArray : number[] = [];\r\n\r\n  constructor(private events : Events) {\r\n    this.Math = Math;\r\n    this.parseFloat = parseFloat;\r\n  }\r\n\r\n  changeRating(event){\r\n\r\n    if(this.readonly && this.readonly === \"true\") return;\r\n    // event is different for firefox and chrome\r\n    let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\r\n    if(this.halfStar && this.halfStar === \"true\") {\r\n      this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\r\n    } else {\r\n      this.rating = id + 1;\r\n    }\r\n    \r\n    // subscribe this event to get the changed value in your parent compoanent \r\n    this.events.publish(`star-rating:changed`, this.rating); //common event for all instances included for backwards compatibility\r\n    this.events.publish(this.eventInfo.topic, this.rating); //common event for all instances\r\n    // unique event\r\n    this.ratingChanged.emit(this.rating)\r\n  }\r\n}"]}